              TOKEN             VALUE LINE  POS
         IDENTIFIER          #include 0     0
          SIGN_LESS                 < 0     9
         IDENTIFIER           fstream 0    10
          SIGN_MORE                 > 0    17
         IDENTIFIER          #include 1     0
             STRING  "TokenStorage.h" 1     8
              USING             using 3     0
          NAMESPACE         namespace 3     6
         IDENTIFIER               std 3    16
         SEMI_COLON                 ; 3    19
              CLASS             class 5     0
         IDENTIFIER           MyClass 5     6
              FINAL             final 5    18
 OPEN_CURLY_BRACKET                 { 6     0
             PUBLIC            public 7     0
              COLON                 : 7     6
         IDENTIFIER           MyClass 8     4
   OPEN_PARENTHESIS                 ( 8    11
                INT               int 8    12
         IDENTIFIER                 a 8    16
              COMMA                 , 8    17
                INT               int 8    19
         IDENTIFIER                 b 8    23
  CLOSE_PARENTHESIS                 ) 8    24
 OPEN_CURLY_BRACKET                 { 9     4
                 IF                if 10     8
   OPEN_PARENTHESIS                 ( 10    11
               TRUE              true 10    12
  CLOSE_PARENTHESIS                 ) 10    16
 OPEN_CURLY_BRACKET                 { 11     8
CLOSE_CURLY_BRACKET                 } 12     8
               ELSE              else 13    11
 OPEN_CURLY_BRACKET                 { 14     8
CLOSE_CURLY_BRACKET                 } 15     8
              FLOAT             float 17     8
         IDENTIFIER              temp 17    14
         SEMI_COLON                 ; 17    18
CLOSE_CURLY_BRACKET                 } 18     4
         SEMI_COLON                 ; 18     5
            VIRTUAL           virtual 23     4
               VOID              void 23    12
         IDENTIFIER          Function 23    17
   OPEN_PARENTHESIS                 ( 23    25
  CLOSE_PARENTHESIS                 ) 23    26
             ASSIGN                 = 23    28
             NUMBER                 0 23    30
         SEMI_COLON                 ; 23    31
          PROTECTED         protected 25     0
              COLON                 : 25     9
                INT               int 27     4
         IDENTIFIER              Temp 27     8
   OPEN_PARENTHESIS                 ( 27    12
  CLOSE_PARENTHESIS                 ) 27    13
 OPEN_CURLY_BRACKET                 { 28     4
                INT               int 29     8
         IDENTIFIER                 i 29    12
             ASSIGN                 = 29    14
             NUMBER                 0 29    16
         SEMI_COLON                 ; 29    17
              WHILE             while 30     8
   OPEN_PARENTHESIS                 ( 30    14
         IDENTIFIER                 i 30    15
          SIGN_LESS                 < 30    17
             ASSIGN                 = 30    18
             NUMBER                 5 30    20
  CLOSE_PARENTHESIS                 ) 30    21
 OPEN_CURLY_BRACKET                 { 31     8
         IDENTIFIER                 i 32    12
               PLUS                 + 32    13
               PLUS                 + 32    14
         SEMI_COLON                 ; 32    15
CLOSE_CURLY_BRACKET                 } 33     8
                FOR               for 35     8
   OPEN_PARENTHESIS                 ( 35    12
                INT               int 35    13
         IDENTIFIER                 i 35    17
             ASSIGN                 = 35    19
             NUMBER                 0 35    21
         SEMI_COLON                 ; 35    22
         IDENTIFIER                 i 35    24
          SIGN_LESS                 < 35    26
             NUMBER                 5 35    28
         SEMI_COLON                 ; 35    29
         IDENTIFIER                 i 35    31
               PLUS                 + 35    32
               PLUS                 + 35    33
  CLOSE_PARENTHESIS                 ) 35    34
 OPEN_CURLY_BRACKET                 { 36     8
CLOSE_CURLY_BRACKET                 } 38     8
             RETURN            return 41     8
             NUMBER                 1 41    15
                 OR                || 41    17
             NUMBER                 2 41    20
                AND                && 41    22
             NUMBER                 3 41    25
     MULTIPLICATION                 * 41    27
             NUMBER                 5 41    29
             NUMBER                 1 41    33
         SEMI_COLON                 ; 41    34
                INT               int 41    36
         IDENTIFIER                 c 41    40
             ASSIGN                 = 41    42
             NUMBER                 5 41    44
         SEMI_COLON                 ; 41    45
CLOSE_CURLY_BRACKET                 } 42     4
            PRIVATE           private 43     0
              COLON                 : 43     7
                INT               int 45     4
         IDENTIFIER      m_identifier 45     8
         SEMI_COLON                 ; 45    20
CLOSE_CURLY_BRACKET                 } 46     0
         SEMI_COLON                 ; 46     1
                INT               int 49     0
         IDENTIFIER              main 49     4
   OPEN_PARENTHESIS                 ( 49     8
  CLOSE_PARENTHESIS                 ) 49     9
 OPEN_CURLY_BRACKET                 { 50     0
         IDENTIFIER          ifstream 51     4
         IDENTIFIER             input 51    13
   OPEN_PARENTHESIS                 ( 51    18
             STRING       "input.txt" 51    18
  CLOSE_PARENTHESIS                 ) 51    30
         SEMI_COLON                 ; 51    31
CLOSE_CURLY_BRACKET                 } 53     0
