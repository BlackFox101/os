              TOKEN             VALUE LINE  POS
                INT               int 0     0
         IDENTIFIER              main 0     4
   OPEN_PARENTHESIS                 ( 0     8
  CLOSE_PARENTHESIS                 ) 0     9
 OPEN_CURLY_BRACKET                 { 0    10
              FLOAT             float 1     4
         IDENTIFIER                 f 1    10
             ASSIGN                 = 1    12
                DOT                 . 1    14
             NUMBER                0f 1    15
         SEMI_COLON                 ; 1    17
             RETURN            return 2     4
   OPEN_PARENTHESIS                 ( 2    11
             NUMBER                 1 2    12
             NUMBER                 5 2    16
              MINUS                 - 2    18
              MINUS                 - 2    19
              MINUS                 - 2    20
   OPEN_PARENTHESIS                 ( 2    22
             NUMBER                 4 2    23
  CLOSE_PARENTHESIS                 ) 2    24
  CLOSE_PARENTHESIS                 ) 2    25
         SEMI_COLON                 ; 2    26
CLOSE_CURLY_BRACKET                 } 3     0
         IDENTIFIER          #include 5     0
          SIGN_LESS                 < 5     9
         IDENTIFIER           fstream 5    10
          SIGN_MORE                 > 5    17
         IDENTIFIER          #include 6     0
             STRING  "TokenStorage.h" 6     8
              USING             using 8     0
          NAMESPACE         namespace 8     6
         IDENTIFIER               std 8    16
         SEMI_COLON                 ; 8    19
              CLASS             class 10     0
         IDENTIFIER           MyClass 10     6
              FINAL             final 10    18
 OPEN_CURLY_BRACKET                 { 11     0
             PUBLIC            public 12     0
              COLON                 : 12     6
         IDENTIFIER           MyClass 13     4
   OPEN_PARENTHESIS                 ( 13    11
                INT               int 13    12
         IDENTIFIER                 a 13    16
              COMMA                 , 13    17
                INT               int 13    19
         IDENTIFIER                 b 13    23
  CLOSE_PARENTHESIS                 ) 13    24
 OPEN_CURLY_BRACKET                 { 14     4
                 IF                if 15     8
   OPEN_PARENTHESIS                 ( 15    11
               TRUE              true 15    12
  CLOSE_PARENTHESIS                 ) 15    16
 OPEN_CURLY_BRACKET                 { 16     8
CLOSE_CURLY_BRACKET                 } 17     8
               ELSE              else 18    11
 OPEN_CURLY_BRACKET                 { 19     8
CLOSE_CURLY_BRACKET                 } 20     8
              FLOAT             float 22     8
         IDENTIFIER              temp 22    14
         SEMI_COLON                 ; 22    18
CLOSE_CURLY_BRACKET                 } 23     4
         SEMI_COLON                 ; 23     5
            VIRTUAL           virtual 28     4
               VOID              void 28    12
         IDENTIFIER          Function 28    17
   OPEN_PARENTHESIS                 ( 28    25
  CLOSE_PARENTHESIS                 ) 28    26
             ASSIGN                 = 28    28
             NUMBER                 0 28    30
         SEMI_COLON                 ; 28    31
          PROTECTED         protected 30     0
              COLON                 : 30     9
                INT               int 32     4
         IDENTIFIER              Temp 32     8
   OPEN_PARENTHESIS                 ( 32    12
  CLOSE_PARENTHESIS                 ) 32    13
 OPEN_CURLY_BRACKET                 { 33     4
                INT               int 34     8
         IDENTIFIER                 i 34    12
             ASSIGN                 = 34    14
             NUMBER                 0 34    16
         SEMI_COLON                 ; 34    17
              WHILE             while 35     8
   OPEN_PARENTHESIS                 ( 35    14
         IDENTIFIER                 i 35    15
          SIGN_LESS                 < 35    17
             ASSIGN                 = 35    18
             NUMBER                 5 35    20
  CLOSE_PARENTHESIS                 ) 35    21
 OPEN_CURLY_BRACKET                 { 36     8
         IDENTIFIER                 i 37    12
               PLUS                 + 37    13
               PLUS                 + 37    14
         SEMI_COLON                 ; 37    15
CLOSE_CURLY_BRACKET                 } 38     8
                FOR               for 40     8
   OPEN_PARENTHESIS                 ( 40    12
                INT               int 40    13
         IDENTIFIER                 i 40    17
             ASSIGN                 = 40    19
             NUMBER                 0 40    21
         SEMI_COLON                 ; 40    22
         IDENTIFIER                 i 40    24
          SIGN_LESS                 < 40    26
             NUMBER                 5 40    28
         SEMI_COLON                 ; 40    29
         IDENTIFIER                 i 40    31
               PLUS                 + 40    32
               PLUS                 + 40    33
  CLOSE_PARENTHESIS                 ) 40    34
 OPEN_CURLY_BRACKET                 { 41     8
CLOSE_CURLY_BRACKET                 } 43     8
             RETURN            return 46     8
             NUMBER                 1 46    15
                 OR                || 46    17
             NUMBER                 2 46    20
                AND                && 46    22
             NUMBER                 3 46    25
     MULTIPLICATION                 * 46    27
             NUMBER                 5 46    29
             NUMBER                 1 46    33
         SEMI_COLON                 ; 46    34
                INT               int 46    36
         IDENTIFIER                 c 46    40
             ASSIGN                 = 46    42
             NUMBER                 5 46    44
         SEMI_COLON                 ; 46    45
CLOSE_CURLY_BRACKET                 } 47     4
            PRIVATE           private 48     0
              COLON                 : 48     7
                INT               int 50     4
         IDENTIFIER      m_identifier 50     8
         SEMI_COLON                 ; 50    20
CLOSE_CURLY_BRACKET                 } 51     0
         SEMI_COLON                 ; 51     1
                INT               int 54     0
         IDENTIFIER              main 54     4
   OPEN_PARENTHESIS                 ( 54     8
  CLOSE_PARENTHESIS                 ) 54     9
 OPEN_CURLY_BRACKET                 { 55     0
         IDENTIFIER          ifstream 56     4
         IDENTIFIER             input 56    13
   OPEN_PARENTHESIS                 ( 56    18
             STRING       "input.txt" 56    18
  CLOSE_PARENTHESIS                 ) 56    30
         SEMI_COLON                 ; 56    31
CLOSE_CURLY_BRACKET                 } 58     0
